@model IceCreamProject.Models.UserOrder

@{
    ViewData["Title"] = "Consumption Analysis";
    Layout = "~/Views/Shared/_Layout3.cshtml";

    var titles = (List<string>)ViewData["Message"];
}

<div class="heading_container heading_center ">
    <h1>Prediction</h1>
    <h4>Choose an address and see what Icecream will be order most there, by temperature!</h4>
</div>

<section class="contact_section" style="background-color:lightblue">
    <div class="container" style="background-color:white">
        <div class="row">
            <div class="col-md-6" style="background-color: lightblue">
                <div class="form_container pr-lg-3">

                    <form asp-action="Prediction">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div><p></p></div>
                        <div class="form-group">
                            <label asp-for="Address" class="control-label"></label>
                            <input asp-for="Address" class="form-control" placeholder="Enter an address" />
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="predict" class="btn btn-primary" />
                        </div>

                    </form>

                    <h3>The predicted Icecream is:</h3>
                    <h3 style="color:black">@ViewBag.text</h3>

                </div>
            </div>

            <div class="col-md-6">
                <div class="img-box">
                    <img src="~/images/icecreams/hoo.jpg" class="box_img" alt="prices table img" width="500" height="300" />
                </div>

            </div>

        </div>
    </div>
</section>

<div class="heading_container heading_center ">
    <h1>Consumption Analysis</h1>
    <h4>Here is a graph describes how many orders from each taste were in the last year</h4>
</div>

<div id="columnchart_material"></div>


@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?&libraries=places&key=AIzaSyCgHkSOJXcXH_N6iaFzJj8i8zpTO9W2p_Y">
    </script>
    <script type="text/javascript">
        google.maps.event.addDomListener(window, 'load', function () {
            var options = {

                fields: ["address_components", "geometry", "icon", "name"],
                types: ["address"],
                componnentRestrictions: { country: "is" }

            };
            var input = document.getElementById('Address');
            var places = new google.maps.places.Autocomplete(input, options);
        });

    </script>


    <script>
        // the selector will match all input controls of type :checkbox
        // and attach a click event handler
        $("input:checkbox").on('click', function () {
            // in the handler, 'this' refers to the box clicked on
            var $box = $(this);
            if ($box.is(":checked")) {
                // the name of the box is retrieved using the .attr() method
                // as it is assumed and expected to be immutable
                var group = "input:checkbox[name='" + $box.attr("name") + "']";
                // the checked state of the group/box on the other hand will change
                // and the current value is retrieved using .prop() method
                $(group).prop("checked", false);
                $box.prop("checked", true);
            } else {
                $box.prop("checked", false);
            }
        });
    </script>

    <script>
        function saveTasteIdPrice() {
            document.getElementById("demo").style.color = "red";
        }
    </script>



    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">

        google.charts.load('current', { 'packages': ['bar'] });
        google.charts.setOnLoadCallback(ajax_call);


        function ajax_call(){
            $.ajax({
                url: '@Url.Action("getMonthData", "Manager")',
                crossDomain: true,
                success: function (result) {
                    var jsonData = result;
                    var arrData = JSON.parse(jsonData);
                    console.log(arrData);
                    data = google.visualization.arrayToDataTable(arrData);
                    console.log(data);
                    return drawChart(data);
                }
                //error: function (error) {
                //    console.log('message Error' + JSON.stringify(error));
                //}
            });

        }

        function drawChart(_data) {

            var options = {
                chart: {
                    title: 'Ice Cream Orders',
                    subtitle: 'Orders of all tastes :2021',
                },
                //bars: 'vertical', // Required for Material Bar Charts.
                //hAxis: { format: 'decimal' },
                height: 400,
                //colors: ['#1b9e77', '#d95f02', '#7570b3']
            };

            var chart = new google.charts.Bar(document.getElementById('columnchart_material'));

            chart.draw(_data, google.charts.Bar.convertOptions(options));
        }
    </script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
}